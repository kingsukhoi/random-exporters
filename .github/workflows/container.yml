# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Container

on:
  push:
    branches: [ "master" ]
jobs:
  build:
    concurrency: 
      group: "build-container"
      cancel-in-progress: true
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    steps:
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.3.0 
      - name: Log in to the Container registry
        uses: docker/login-action@v3.1.0
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Setup Pack
        run: |
          sudo add-apt-repository ppa:cncf-buildpacks/pack-cli && \
          sudo apt-get update && \
          sudo apt-get install pack-cli
      - name: Get Short SHA
        id: shortsha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Cache
        uses: actions/cache@v4
        with:
          path: ./pack-cache
          key: "${{ hashFiles('go.mod', 'go.sum') }}"
      - name: Build Container
        run: |
          pack build --publish ghcr.io/kingsukhoi/random-exporters:${{ github.sha }} -t ghcr.io/kingsukhoi/random-exporters:latest -t ghcr.io/kingsukhoi/random-exporters:${{ steps.shortsha.outputs.sha_short }} -B paketobuildpacks/builder-jammy-tiny \
            --env BP_GO_TARGETS="cmd/web" --env BP_GIN_MODE="release" --cache='type=build;format=bind;source=./pack-cache'
          docker pull ghcr.io/${{github.repository}}:${{ github.sha }} > /dev/null
          echo "image_sha=$(docker image inspect ghcr.io/${{github.repository}}:${{ github.sha }} | jq '.[0].RepoDigests[0]' | cut -d ':' -f 2 | cut -d '"' -f 1)" >> $GITHUB_OUTPUT
      - name: test image sha
        run: |
          echo ${{steps.build.outputs.image_sha}}
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ghcr.io/${{github.repository}}
          subject-digest: "sha256:${{steps.build.outputs.image_sha}}"
          push-to-registry: true
      - name: Dump github context
        run:   echo "$GITHUB_CONTEXT"
        shell: bash
        env:
         GITHUB_CONTEXT: ${{ toJson(github) }}
    
